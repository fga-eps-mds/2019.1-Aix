%YAML 1.1
---
actions:
- utter_default
- utter_cumprimentar
- utter_despedir
- utter_tudo_bem
- utter_diga_mais
- utter_elogios
- utter_sobre_python
- utter_menu_ajuda
- utter_sobre_aix
- utter_sobre_condicionais
- utter_sobre_variaveis
- utter_sobre_inteiros
- utter_sobre_pontos_flutuantes
- utter_sobre_caracteres
- utter_sobre_booleanos
- utter_sobre_condicionais_exemplo
config:
  store_entities_as_slots: true
entities:
- servico
- sistema
forms: []
intents:
- cumprimentar:
    use_entities: true
- tudo_bem:
    use_entities: true
- despedir:
    use_entities: true
- sobre_python:
    use_entities: true
- menu_ajuda:
    use_entities: true
- sobre_aix:
    use_entities: true
- sobre_condicionais:
    use_entities: true
- sobre_variaveis:
    use_entities: true
- sobre_inteiros:
    use_entities: true
- sobre_pontos_flutuantes:
    use_entities: true
- sobre_caracteres:
    use_entities: true
- sobre_booleanos:
    use_entities: true
- sobre_condicionais_exemplo:
    use_entities: true
slots:
  is_authenticated:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.BooleanSlot
  servico:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  sistema:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - organon preditivo
templates:
  utter_cumprimentar:
  - text: "Oiieee, tudo Bééem?\n\nSou Aix, como posso te ajudar?\n"
  utter_despedir:
  - text: "Bééem, foi ótimo poder me divertir enquanto te ajudo!\n\nQualquer dúvida\
      \ conta comigo, beleza?\n\nAté logo meu pequeno jupiter!\n"
  utter_menu_ajuda:
  - text: "Eu sou uma cabra béem inteligente e posso te ajudar com muitas coisas!\n\
      Você pode me perguntar tudo sobre essa maravilhosa cobrinha que chamamos de\
      \ Python!\nVocê pode mandar seus códigos! Assim eu posso corrigir eles, te aconselhar\
      \ alguma Biblioteca legal, explicar onde  você errou\nTem alguma dúvida sobre\
      \ alguma função da linguagem? Pode perguntar também! Te ajudo na sintaxe e tudo\
      \ mais. Hahaha!\nPoxa, você pode até achar que eu não expliquei muito béem.\
      \ Não tem problema. Eu te mando um link que te explica melhor!\nAlém disso tudo,\
      \ que te ajudo no dever de casa! Hahahaha! Só me mandar o exercício e o seu\
      \ código que eu corrijo!\nÉ só perguntar! Sou uma Cabra mas eu não mordo.\n"
  utter_sobre_aix:
  - text: "Você ainda não me conhece?! Por onde é que você navegava esse tempo todo?\
      \ Eu sou a cabra Aix e estou aqui para te auxiliar nos seus estudos e garantir\
      \ sua nota 10 quando o assunto é linguagem de programação Python!\nQuer surpreender\
      \ seu professor com um notão na sua avaliação? Não sabée o que fazer? Calma,\
      \ que eu estou aqui para te ajudar! Posso corrigir seu código, se você quiser!\n\
      Então você quer saber mais sobre mim? Vou te contar um segredo: sabia que eu\
      \ fui criada por estudantes da Universidade de Brasília? Eu aposto que se você\
      \ se esforçar e estudar muito junto comigo você tambéem será capaz de criar\
      \ uma ferramenta de estudo tão maneira quanto essa!\nAí vai uma charada: Quem\
      \ é, quem é... que te ajuda com a sintaxe Python, tira suas dúvidas, e ainda\
      \ corrige seus exercícios de programação? Béem, se você falou seu professor,\
      \ você acertou... Mas sabia que eu também posso te ajudar com isso?\nJá vi que\
      \ você não me conhece muito béem... Mas aposto que você vai gostar de mim! Inclusive,\
      \ se quiser me apresentar aos seus amigos, fala para eles que eles precisam\
      \ ter um desses sistema operacionais: Linux, Windows ou MacOS. E não esqueça,\
      \ você tambéem precisa do ambiente Jupyter instalado!\nA cabra que corrige seus\
      \ códigos na hora... que tira suas dúvidas sem nenhuma demora... que está todo\
      \ tempo junto com você... Essa cabra sou eu!\nQuer saber uma curiosidade sobre\
      \ mim? Sabia que meu nome veio da mitologia romana? Acontece que há muito tempo\
      \ atrás quem amamentou o deus Júpiter foi a cabra Aix. Por eu ter sido criada\
      \ integrada nessa plataforma Jupyter, nasceu a ideia do meu nome! Quanta imaginação,\
      \ não?\n"
  utter_sobre_booleanos:
  - text: "O tipo booleano serve para armazenar apenas o valor verdadeiro ou falso,\
      \ é usado em operações lógicas\nÉ verdadeiro que eu gosto muito de feno!\n"
  utter_sobre_caracteres:
  - text: "As variáveis do tipo caracter guardam valores alfanuméricos e caractéres\
      \ especiais, então, letras, números, pontos, acentos, chaves, parêntese.\nExemplos\
      \ de caracteres seriam 'b', 'é', 'e', '!'\n"
  utter_sobre_condicionais:
  - text: "Ah, eu adoro estruturas condicionais!\nBom, uma estrutura condicional são\
      \ ações que podem ou não serem executadas no seu programa.\nÉ necessário que\
      \ uma condição seja testada para que que essas ações sejam executadas ou não.\n\
      \nSE a condição é satisfeita, executamos o que foi definido. SE NÃO, pulamos\
      \ e vamos para a proxima condição. Além disso, podemos fazer uma opção extra\
      \ que será executada caso nenhuma condição for satisfeita\n\nPor exemplo:\n\n\
      Imagine que você tem um pouquinho de feno nas suas mãos\nSe você me der ele,\
      \ eu vou ficar feliz!\nSe você resolver ficar com ele, eu vou ficar na vontade,\
      \ poxa!\nE se você nem me der e nem ficar com ele, vou ficar confusa, oras!\
      \ Por que você teria feno e não faria nada com ele? Eu hein...\n"
  utter_sobre_condicionais_exemplo:
  - text: "Quer saber como escrever uma estrutura condicional em python? Xá comigo,\
      \ nisso eu sou muito boa!\nDigamos que se você quer que seja printado \"amo\
      \ feno\" caso uma variavel x seja igual a 2 e \"amo python\"\ncaso essa variável\
      \ seja igual 5. Caso x seja tanto diferente de 2 quanto de 5 você quer\nque\
      \ seja printado \"amo a Aix\" :\n  \n  if x == 2:\n    print(\"amo feno\")\n\
      \  elif x == 5:\n    print(\"amo python\")\n  else:\n    print(\"amo a Aix\"\
      )\n"
  utter_sobre_inteiros:
  - text: "Uma variável do tipo inteiro, serve para guardar valores numéricos dentro\
      \ do conjunto de inteiros.\nIsto éee, todos números positivos e negatios sem\
      \ casas decimais.\nPor exemplo, você pode contar seus fenos com inteiros, 20\
      \ fenos, 30 fenos.\n"
  utter_sobre_pontos_flutuantes:
  - text: "A \"evolução\" do tipo inteiro é o tipo Ponto Flutuente, ele armazena valores\
      \ numéricos, porém com casas decimais.\nEntão 3.14150, -1.5, 61.884 são possíveis\
      \ de serem armazenados numa variável deste tipo.\nUma variável do tipo ponto\
      \ flutuante pode ser 1,5 kilos de capim, o meu peso (que é segredo).\n"
  utter_sobre_python:
  - text: "O Python é uma linguagem de programação de alto nível, muito usada no Linux\
      \ e em outros sistemas Unix por ser béem rápida de aprender, mesmo para quem\
      \ não possui experiência anterior com programação. A sintaxe é bastante organizada\
      \ e a linguagem inclui suporte a objetos. Uma de suas principais características\
      \ é permitir a fácil leitura do código e, desse modo, produzir um código bom\
      \ e fácil de manter de maneira rápida.\nO Python foi criado por Guido van Rossum,\
      \ tambéem conhecido como Béenevolent Dictator for Life (BDFL) na comunidade\
      \ da linguagem, no ano de 1991, béem antes de eu nascer, e atualmente ela está\
      \ com 27~28 anos.\n"
  utter_sobre_variaveis:
  - text: "Pois béem, variável é o nome dado a uma área de memória reservada para\
      \ guardar as informações ou os dados de um programa por um determinado tempo.\n\
      Existem vários tipos de variáveis, mas por hora, você vai precisar saber dos\
      \ tipos primitivos.\nEsses tipos são inteiro(int), ponto flutuante(float), caractere(char)\
      \ e booleano (bool).\n"
  utter_tudo_bem:
  - text: "Eu estou béeḿm, obrigado por se importar!\n\nEm que posso te ajudar?\n"
